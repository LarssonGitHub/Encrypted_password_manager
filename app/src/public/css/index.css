:root {
  --focus: #181b27;
  /* --main-text: #EDE6DD; */
  --main-text: #dfddda;
  --second-text: #1b1818;
  --third-text: #aeb5a8;
  --fourth-text: #5b5a5a;
  --danger: #ba1c15;
  --success: #2c512f;
  --header: #36393e;
  --component-one: #1d1f21;
  --component-two: rgb(76, 77, 79);
  --component-three: rgb(41, 41, 41);
  --component-four: rgb(49 51 52);
  --button-one: #868383;
  --button-two: #646464;
  --item-button: #383838;
  --item-button-active: #414040;
  
  
  --button-hover-one: #959292;
  --button-hover-two: #6e6c6c;
  --button-close-one: #e7170d;
  --button-close-two: #ee4343;
  
  --button-close-hover-one: #db3830;
  --button-close-hover-two: #c51b13;

  --component-gradient: linear-gradient(0deg, var(--component-three) 0%, var(--component-four) 100%);
  --button-gradient: linear-gradient(to bottom, var(--button-one) 0%, var(--button-two) 100%);
  /* All hover effects are disabled, instead it only changes background on active. */
  /* --button-gradient-hover: linear-gradient(to bottom, var(--button-hover-one) 0%, var(--button-hover-two) 100%); */
  --button-gradient-active: linear-gradient(to bottom, var(--button-hover-one) 0%, var(--button-hover-two) 100%);
  --button-close-gradient: linear-gradient(to bottom, var(--button-close-one) 0%, var(--button-close-two) 100%);
  /* --button-close-gradient-hover: linear-gradient(to bottom, var(--button-close-hover-one) 0%, var(--button-close-hover-two) 100%); */
  --button-close-gradient-active: linear-gradient(to bottom, var(--button-close-hover-one) 0%, var(--button-close-hover-two) 100%);

  /* --box-shadow: rgb(16 16 16 / 20%) 0px 4px 5px; */
  --box-shadow: rgb(16 16 16 / 10%) 0px 4px 5px;

  --spacing-extra-extra-small: 0.3rem;
  --spacing-extra-small: 0.5rem;
  --spacing-small: 0.8rem;
  --spacing-medium-small: 1rem;
  --spacing-medium: 1.5rem;
  --spacing-large: 2rem;
  --spacing-extra-large: 3rem;

  --font-size-small: 0.85rem;
  --font-size-extra-small: 0.8rem;
  --font-size-medium: 1rem;
  --font-size-large: 1.15rem;
  --font-size-extra-large: 2rem;

  --gap-extra-small: 0.25rem;
  --gap-small: 0.3rem;
  --gap-medium: 0.6rem;
  --gap-large: 1rem;
}

* {
  color: var(--main-text);
  padding: 0;
  margin: 0;
  font-size: var(--font-size-medium);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  letter-spacing: 0.2px;
  line-height: 1.4;
  box-sizing: border-box;
}

*:focus {
  outline-color: var(--focus);
}

body {
  background-color: var(--component-one);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
    Arial, sans-serif;
}

h1 {
  font-size: var(--font-size-extra-large);
  margin: 0 0 var(--spacing-medium-small) 0;
}

h3 {
  font-weight: 700;
  letter-spacing: 0.8px;
  font-size: var(--font-size-large);
  white-space: pre-wrap;
}

b {
  font-weight: 500;
}

p {
  margin: 0 0 var(--spacing-extra-small) 0;

}

li {
  /* margin: 0 0 var(--spacing-small) 0; */
  margin: 0 0 1.2rem 0;
}

header {
  background: var(--header);
  padding: var(--spacing-medium-small) var(--spacing-medium);
  -webkit-box-shadow: var(--box-shadow);
  box-shadow: var(--box-shadow);
}

main {
  height: 100vh;
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem 1.5rem;
}

::-webkit-scrollbar {
  width: 13px;
}

::-webkit-scrollbar-track {
  background: #b6b3b3;

}

::-webkit-scrollbar-thumb {
  border-radius: 3px;
  background: #6a6a6d;
}

::-webkit-scrollbar-thumb:hover {
  background: rgb(87, 86, 86);
}

.error-container {
  color: var(--second-text);
  background-color: var(--danger);
}

.feedback-container {
  position: fixed;
  bottom: 2rem;
  border: none;
  width: 70%;
  max-width: 500px;
  border-radius: 5px;
  padding: var(--spacing-small) var(--spacing-medium);
  -webkit-box-shadow: var(--box-shadow);
  box-shadow: var(--box-shadow);
}

.feedback-container p {
  margin: 0;
}

.success-container {
  color: var(--second-text);
  background-color: var(--success);
}

.hideFeedback {
  opacity: 0;
  transition: opacity 0s linear;
  left: -300px;
}

.showFeedback {
  opacity: 0.95;
  transition: opacity 0.5s linear;
  left: 50%;
  transform: translateX(-50%);
  z-index: 999999999;
}

.svg-add-button,
.svg-item-button,
.svg-close-button {
  color: var(--second-text);
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: center;
  gap: var(--gap-small);
}

#post-form-button svg {
  width: 18px;
  height: auto;
}

#post-form-button small {
  font-size: 1rem;
  font-weight: 400;
}


#close-form-button {
  position: fixed;
  right: 2rem;
  top: 2rem;
  padding: 0.2rem;
  background: var(--button-close-gradient);
  fill: var(--second-text);
}

#close-form-button:hover {
  transform: scale(1.1);
  /* background: var(--button-close-gradient-hover); */
}

#close-form-button:active {
  /* background: var(--button-close-gradient); */
  background: var(--button-close-gradient-active);
}

.delete-item-button small,
.delete-item-button svg {
  color: var(--button-close-two);
  fill: var(--button-close-two);
}

/* Does it need to change color on hover? */
/* .delete-item-button:hover small, .delete-item-button:hover svg {
  color: var(--button-close-one);
  fill: var(--button-close-one);
} */

/* .delete-item-button:active small, .delete-item-button:active svg  {
  fill: var(--button-close-hover-two);
  color: var(--button-close-hover-two);
}

.edit-item-button:active small, .edit-item-button:active svg {
  fill: var(--third-text);
  color: var(--third-text);
} */

.edit-item-button small,
.edit-item-button svg,
#post-form-button,
button {
  fill: var(--main-text);
  color: var(--main-text);
}

#post-form-button:hover {
  transform: scale(1.08);
  /* background: var(--button-gradient-active); */
}

#post-form-button:active {
  transform: scale(1.08);
  /* background: var(--button-gradient); */
  background: var(--button-gradient-active);
}

.edit-item-button:hover,
.delete-item-button:hover {
  transform: scale(1.12);
}


/* TODO transition makes element blurry, find a fix 
   This code doesn't seem to work */
/* #close-form-button {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    transform-style: preserve-3d;
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    backface-visibility: hidden;
} */

button {
  cursor: pointer;
  background: var(--button-gradient);
  color: var(--main-text);
  border: 0;
  border-radius: 5px;
  transition: 0.4s;
  -webkit-box-shadow: var(--box-shadow);
  box-shadow: var(--box-shadow);
  font-weight: 400;
}


button:hover {
  transform: scale(1.04);
}

button:active {
  background: var(--button-gradient-active);
}

small {
  font-size: var(--font-size-extra-small);
  display: inline-block;
}

.text-warning {
  color: var(--danger);
  font-size: var(--font-size-medium);
}

.svg-close-button svg {
  width: 15px;
  height: 15px;
}

.svg-item-button svg {
  width: 11px;
  height: auto;
}

.svg-item-button small {
  font-size: var(--font-size-small);
  display: inline-block;
  font-weight: 400;
}

.reset-ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.list-title {
  font-size: var(--font-size-large);
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  margin-bottom: var(--spacing-medium);
}

.item-button-container {
  top: 0;
  right: 0;
  gap: var(--gap-medium);
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  flex-wrap: wrap;
  align-items: center;
  margin-top: var(--spacing-medium);
}

.item-button-container button {
  /* box-shadow:none;
  background: none;  */
  background: var(--item-button);
  padding: 0.2rem 0.6rem;
}

.item-button-container button:active {
  background: var(--item-button-active);
}

summary {
  cursor: pointer;
}

#list-data-container {
  display: grid;
  gap: var(--gap-large);
  grid-template-columns: repeat(auto-fill, minmax(min(250px, 100%), 1fr));
}

.list-data-item p {
  color: var(--third-text);
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

.list-data-item summary {
  color: var(--third-text);
}

.list-inner-wrapper {
  height: 60px;
  overflow: hidden;
  background: var(--component-gradient);
  border-radius: 6px;
  width: 100%;
  padding: var(--spacing-medium-small) var(--spacing-medium);
  transition: 0s;
  -webkit-box-shadow: var(--box-shadow);
  box-shadow: var(--box-shadow);
}

.template-list-component {
  position: relative;
}

.list-inner-wrapper:hover {
  /* transform: scale(1.10);
  transform-origin: 50% 110px; */
  transform: scale(1.05);
  transform-origin: 50% 60px;
  z-index: 99999;
  height: auto;
  position: absolute;
  transition: 0.4s;
}

.list-inner-wrapper:hover .list-title {
  word-break: break-all;
  text-overflow: revert;
  white-space: revert;

}

.blurred-list-content {
  filter: blur(0.8rem);
  position: relative;
}

.list-inner-wrapper:hover .padlock {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  justify-content: stretch;
  gap: 0;
}

.padlock {
  background: transparent;
  padding: var(--spacing-medium-small);
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  cursor: pointer;
  transition: 0.4s;
}

.padlock svg {
  width: 50px;
  height: 50px;
  transition: 0.4s;
  fill: var(--button-one);
}

.padlock p {
  color: var(--button-one);
  margin-top: var(--spacing-extra-small);
  transition: 0.4s;
}

.padlock:hover {
  transform: translate(-50%, -50%) scale(1.05);
}

#post-form-button {
  font-weight: 400;
  /* background: none; */
  box-shadow: none;
  z-index: 99999999;
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  width: 90px;
  padding: var(--spacing-extra-extra-small);
  background: var(--button-gradient);
}

dialog {
  margin: auto;
  border: none;
  width: 70%;
  max-width: 400px;
  padding: 2.2rem 1.7rem;
  background: none;
    /* padding: var(--spacing-large) var(--spacing-medium); */
    /* background: var(--component-gradient); */
  /* border-radius: 10px; */
  /* -webkit-box-shadow: var(--box-shadow);
  box-shadow: var(--box-shadow); */
}

dialog p, dialog small {
    color: var(--third-text)
}

dialog::backdrop {
  transition: 0.4s;
  /* background-color: #1b1b1d; */
  opacity: 0.98;
  background: #1d1f21;
}

dialog label {
  display: none;
  margin: 0 0 0.4rem;
}

.dialog-intro {
  font-weight: 500;
}

#form-button-container,
.key-button-container,
.inputs-wrapper {
  /* margin: var(--spacing-medium) 0 0 0; */
  margin: 1.1rem 0 0 0;
}

#feedback-message {
  padding-right: 3rem;
}

#confirm-button-container {
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
  justify-content: stretch;
  gap: var(--gap-medium);
}

#confirm-yes-button,
#confirm-no-button {
  width: 100%;
  padding: var(--spacing-extra-extra-small) var(--spacing-extra-small);
}

#form-container {
  /* position: relative; */
}



input,
textarea {
  color: var(--main-text);
  background: none;
  width: 100%;
  padding: var(--spacing-extra-extra-small) 0rem;
  font-weight: 500;
  outline: 0;
  border-width: 0 0 1.5px;
  border-color: var(--fourth-text);
 /* font-size: 0.8rem; */
  /* -webkit-box-shadow: var(--box-shadow);
  box-shadow: var(--box-shadow);  */
}

input:focus,  textarea:focus {
  /* border-color: var(--main-text); */
  /* outline: 1px dotted #000 */
  outline: none;
}

input::placeholder, textarea::placeholder {
  color: var(--fourth-text);
  /* opacity: 0.8; */
  /* font-size: 0.9rem; */
  /* text-transform: uppercase; */
}

#validate-key-button,
#submit-button,
#create-key-button {
  width: 100%;
  padding: var(--spacing-extra-extra-small) var(--spacing-extra-small);
  border: none;
  border-radius: 5px;
  -webkit-box-shadow: var(--box-shadow);
  box-shadow: var(--box-shadow);
}

textarea {
  height: auto;
  resize: none;
}

.list-additional-data {
  white-space: pre-wrap;
}

@media only screen and (max-width: 800px) {
  #list-data-container {
    grid-template-columns: repeat(auto-fill, minmax(min(250px, 100%), 1fr));
  }
}

@media only screen and (max-width: 600px) {
  dialog {
    width: 100%;
  }

  #list-data-container {
    grid-template-columns: repeat(auto-fill, minmax(min(200px, 100%), 1fr));
  }
}


@media only screen and (max-width: 430px) {
  dialog {
    max-width: revert;
  }
}

@media only screen and (max-width: 260px) {
  body {
    width: 260px;
  }

  #validate-key-container,
  #create-key-container,
  #form-container,
  #confirm-container {
    width: 155px;
  }

  #post-form-button {
    bottom: 1.5rem;
    right: 1.5rem;
  }
}